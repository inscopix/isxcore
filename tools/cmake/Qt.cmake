if(${ISX_ARCH_ARM})
    set(QT_VERSION "5.8")
else()
    # Change to 5.12 when ready - see IDPS-87
    # set(QT_VERSION "5.12")
    set(QT_VERSION "5.8")
endif()
set(QT_DIR ${THIRD_PARTY_DIR}/Qt/${QT_VERSION})
if(${ISX_OS_MACOS})
    string(APPEND QT_DIR "/osx")
elseif(${ISX_OS_LINUX})
    string(APPEND QT_DIR "/linux")
elseif(${ISX_OS_WIN32})
    string(APPEND QT_DIR "/win")
endif()

if(${ISX_ARCH_ARM})
    string(APPEND QT_DIR "-arm")
endif()

set(QT_CORE_HEADER_SEARCH_PATHS)
set(QT_CORE_LINK_LIBRARIES)
list(APPEND CMAKE_PREFIX_PATH ${QT_DIR}/lib/cmake/Qt5Core)
find_package(Qt5Core ${QT_VERSION} REQUIRED)
list(APPEND QT_CORE_HEADER_SEARCH_PATHS ${Qt5Core_INCLUDE_DIRS})
list(APPEND QT_CORE_LINK_LIBRARIES ${Qt5Core_LIBRARIES})

set(QT_GUI_HEADER_SEARCH_PATHS)
set(QT_GUI_LINK_LIBRARIES)
list(APPEND CMAKE_PREFIX_PATH ${QT_DIR}/lib/cmake/Qt5Gui)
find_package(Qt5Gui ${QT_VERSION} REQUIRED)
list(APPEND QT_GUI_HEADER_SEARCH_PATHS ${Qt5Gui_INCLUDE_DIRS})
list(APPEND QT_GUI_LINK_LIBRARIES ${Qt5Gui_LIBRARIES})

set(QT_APP_HEADER_SEARCH_PATHS ${QT_CORE_HEADER_SEARCH_PATHS} ${QT_GUI_HEADER_SEARCH_PATHS})
set(QT_APP_LINK_LIBRARIES ${QT_CORE_LINK_LIBRARIES} ${QT_GUI_LINK_LIBRARIES})
foreach(MODULE Widgets PrintSupport)
    list(APPEND CMAKE_PREFIX_PATH ${QT_DIR}/lib/cmake/Qt5${MODULE})
    find_package(Qt5${MODULE} ${QT_VERSION} REQUIRED)
    list(APPEND QT_APP_HEADER_SEARCH_PATHS ${Qt5${MODULE}_INCLUDE_DIRS})
    list(APPEND QT_APP_LINK_LIBRARIES ${Qt5${MODULE}_LIBRARIES})
endforeach()

if(NOT ${ISX_ARCH_ARM})
    list(APPEND CMAKE_PREFIX_PATH ${QT_DIR}/lib/cmake/Qt5Svg)
    find_package(Qt5Svg ${QT_VERSION} REQUIRED)
    list(APPEND QT_APP_HEADER_SEARCH_PATHS ${Qt5Svg_INCLUDE_DIRS})
    list(APPEND QT_APP_LINK_LIBRARIES ${Qt5Svg_LIBRARIES})
endif()

set(CMAKE_INCLUDE_CURRENT_DIR ON)
